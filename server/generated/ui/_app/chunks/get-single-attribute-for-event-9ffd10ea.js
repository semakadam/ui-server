import{c as u,d as c}from"./index-8821dfb5.js";import{c as a}from"./format-camel-case-abb2903d.js";const d={key:"",value:""},y=new Set(["activityId","attempt","binaryChecksum","identity","parentInitiatedEventId","requestId","scheduledEventId","startedEventId"]),E=t=>y.has(t),s=(t,r)=>!(r===null||r===void 0||r===""||r==="0s"||t==="type"),h=t=>!(t===null||t===void 0||t===""||Array.isArray(t)&&!t.length),A=t=>{var r,e,n;return typeof t=="string"?t:(n=(e=(r=t==null?void 0:t.payloads)!=null?r:t==null?void 0:t.indexedFields)!=null?e:t==null?void 0:t.points)!=null?n:t},p=["baseRunId","continuedExecutionRunId","firstExecutionRunId","newExecutionRunId","newRunId","originalExecutionRunId"],k=["taskQueueName"],w=t=>{for(const r of p)if(t===r)return!0;return!1},x=t=>{for(const r of k)if(t===r)return!0;return!1},i=(t,r)=>{if(typeof r=="object"){const[e]=Object.keys(r);return{key:t+a(e),value:r[e]}}else return{key:t,value:r.toString()}},l=["failure","input","activityType","parentInitiatedEventId","workflowType","taskQueue"],m=({attributes:t})=>{for(const[r,e]of Object.entries(t))if(s(r,e))return i(r,e)},o=t=>{const r=m(t);for(const[e,n]of Object.entries(t.attributes))for(const f of l)if(e===f&&s(e,n))return i(e,n);return r},b=t=>{const r=c(t);return o(r)},S=t=>t?u(t)?b(t):o(t):d;export{x as a,E as b,h as c,s as d,S as e,A as g,w as s};
